< 11 클래스의 활용 >

( 11.1 연산자 오버로딩)

opereator <-- 연산자 오버로딩을 하기 위한 연산자 함수      형식은   operator op () 

operator op ()는  앞에 객체를 임시적으로 사용하고 그안의 멤버 메소드로 op를 가져와서 사용한다.

Ex)  class A 안에  operator +() 이 오버로딩 되어있다고 가정하고 
     A a;
     B b;
 
     a+b; 를 하게되면    <--- a.operator + (b); 와 같이 작동한다. (a에서 operator+을 호출하고 인자로 b를 넣는 것처럼)


Ex)
     class A
    {
       A operator + (A& a)                    <---- 이런식으로 클래스안에 operator오버로딩이 되어있을 경우 A&가 아닌 A로 리턴형을 사용해야한다 왜냐하면 이 예제에서는 result라는 클래스가 {} 안에서
       {                                            지역변수로 만들어지기 때문에 참조로보내면 지역변수므로 사라진후 참조가 불가능하기 때문이다.
            A result;

            result = 부른객체의값... + A의 값...
            
            return result;
       }
    }